
import streamlit as st
import pandas as pd
import random

st.set_page_config(page_title="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ DnD", layout="wide")

# === –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
@st.cache_data
def load_plant_data():
    return pd.read_excel("ingredients_cleaned.xlsx")

@st.cache_data
def load_animal_data():
    return pd.read_excel("animal_ingredients.xlsx")

df_plants = load_plant_data()
df_animals = load_animal_data()

rarity_weights = {
    "–û–±—ã—á–Ω—ã–π": 50,
    "–ù–µ–æ–±—ã—á–Ω—ã–π": 30,
    "–†–µ–¥–∫–∏–π": 15,
    "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π": 5
}

# === –§—É–Ω–∫—Ü–∏—è –≤–∑–≤–µ—à–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ ===
def weighted_sample(df, seed=None):
    if seed is not None:
        random.seed(seed)
    weighted_list = []
    for _, row in df.iterrows():
        weight = rarity_weights.get(row["–†–µ–¥–∫–æ—Å—Ç—å"], 1)
        weighted_list.extend([row.name] * weight)
    if not weighted_list:
        return None
    return df.loc[random.choice(weighted_list)]

# === –í–∫–ª–∞–¥–∫–∏ ===
tab1, tab2 = st.tabs(["üåø –¢—Ä–∞–≤—ã", "ü¶¥ –ñ–∏–≤–æ—Ç–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã"])

for tab, df, label in [(tab1, df_plants, "–¢—Ä–∞–≤—ã"), (tab2, df_animals, "–ñ–∏–≤–æ—Ç–Ω—ã–µ")]:
    with tab:
        st.header(f"üé≤ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ ‚Äî {label}")

        # Seed
        seed = st.number_input("üîÅ Seed (–¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ—Å—Ç–∏)", value=0, step=1)

        # –§–∏–ª—å—Ç—Ä—ã
        col1, col2 = st.columns(2)
        with col1:
            selected_rarity = st.multiselect("üìä –§–∏–ª—å—Ç—Ä –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏", df["–†–µ–¥–∫–æ—Å—Ç—å"].unique(), default=df["–†–µ–¥–∫–æ—Å—Ç—å"].unique())
        with col2:
            selected_env = st.multiselect("üåç –°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è", sorted(set(", ".join(df["–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è"].dropna()).split(", "))), default=None)

        filtered_df = df[df["–†–µ–¥–∫–æ—Å—Ç—å"].isin(selected_rarity)]

        if selected_env:
            filtered_df = filtered_df[filtered_df["–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è"].str.contains("|".join(selected_env), na=False)]

        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        sort_col = st.selectbox("üîÉ –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ", ["–ù–µ—Ç", "–†–µ–¥–∫–æ—Å—Ç—å", "–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è"])
        if sort_col != "–ù–µ—Ç":
            filtered_df = filtered_df.sort_values(by=sort_col)

        # –ö–æ–ª-–≤–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤
        num = st.slider("üî¢ –°–∫–æ–ª—å–∫–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –≤—ã–±—Ä–∞—Ç—å?", 1, 10, 3)

        if st.button(f"–í—ã–±—Ä–∞—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã ({label})", key=label):
            for i in range(num):
                selected = weighted_sample(filtered_df, seed + i)
                if selected is not None:
                    rarity_icon = {
                        "–û–±—ã—á–Ω—ã–π": "‚ö™",
                        "–ù–µ–æ–±—ã—á–Ω—ã–π": "üü¢",
                        "–†–µ–¥–∫–∏–π": "üîµ",
                        "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π": "üü£"
                    }.get(selected["–†–µ–¥–∫–æ—Å—Ç—å"], "‚ùì")

                    with st.expander(f"{rarity_icon} {selected['–ù–∞–∑–≤–∞–Ω–∏–µ']} ({selected['–†–µ–¥–∫–æ—Å—Ç—å']})"):
                        st.write(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {selected['–û–ø–∏—Å–∞–Ω–∏–µ']}")
                        st.write(f"**–û—Å–Ω–æ–≤–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç:** {selected['–û—Å–Ω–æ–≤–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç']}")
                        st.write(f"**–ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:** {selected['–ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã']}")
                        st.write(f"**DC —Å–±–æ—Ä–∞:** {selected['DC —Å–±–æ—Ä–∞']}")
                        st.write(f"**–°—Ç–æ–∏–º–æ—Å—Ç—å:** {selected['–°—Ç–æ–∏–º–æ—Å—Ç—å']} –º–∞–ª—ã—Ö –ø–µ—á–∞—Ç–µ–π")
                        st.write(f"**–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è:** {selected['–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è']}")
                        st.write(f"**–¢–∏–ø:** {selected['–¢–∏–ø']}")
                        st.write(f"**–§–æ—Ä–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:** {selected['–§–æ—Ä–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è']}")
                else:
                    st.warning("–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º —Ñ–∏–ª—å—Ç—Ä–∞–º.")
