import streamlit as st
import pandas as pd
import random

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
@st.cache_data
def load_plant_data():
    return pd.read_excel("ingredients.xlsx")

@st.cache_data
def load_animal_data():
    return pd.read_excel("–∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã_–∂–∏–≤–æ—Ç–Ω—ã–µ_dnd_cr_—Ñ–∏–Ω–∞–ª100.xlsx")

df_plants = load_plant_data()
df_animals = load_animal_data()

rarity_weights = {
    "–û–±—ã—á–Ω—ã–π": 50,
    "–ù–µ–æ–±—ã—á–Ω—ã–π": 30,
    "–†–µ–¥–∫–∏–π": 15,
    "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π": 5
}

rarity_icons = {
    "–û–±—ã—á–Ω—ã–π": "‚ö™",
    "–ù–µ–æ–±—ã—á–Ω—ã–π": "üü¢",
    "–†–µ–¥–∫–∏–π": "üîµ",
    "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π": "üü£"
}

def weighted_sample(df, seed=None):
    weighted_list = []
    for _, row in df.iterrows():
        weight = rarity_weights.get(row["–†–µ–¥–∫–æ—Å—Ç—å"], 1)
        weighted_list.extend([row.name] * weight)
    if seed is not None:
        random.seed(seed)
    chosen_index = random.choice(weighted_list)
    return df.loc[chosen_index]

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Å –≤–∫–ª–∞–¥–∫–∞–º–∏
tabs = st.tabs(["üåø –¢—Ä–∞–≤—ã", "ü¶å –ñ–∏–≤–æ—Ç–Ω—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã"])

for i, (tab, df) in enumerate(zip(tabs, [df_plants, df_animals])):
    with tab:
        st.title("üåø –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ DnD")

        seed = st.number_input("Seed –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–æ—Å—Ç–∞–≤—å—Ç–µ 0 –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ)", value=0, step=1)
        num_items = st.slider("–°–∫–æ–ª—å–∫–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –≤—ã–±—Ä–∞—Ç—å?", 1, 10, 1)

        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è
        selected_rarity = st.multiselect("–†–µ–¥–∫–æ—Å—Ç—å", df["–†–µ–¥–∫–æ—Å—Ç—å"].dropna().unique(), default=df["–†–µ–¥–∫–æ—Å—Ç—å"].dropna().unique())
        selected_env = st.multiselect("–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è", df["–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è"].dropna().unique(), default=df["–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è"].dropna().unique())

        filtered_df = df[df["–†–µ–¥–∫–æ—Å—Ç—å"].isin(selected_rarity) & df["–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è"].isin(selected_env)]

        # –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
        sort_by = st.selectbox("–°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ", ["–†–µ–¥–∫–æ—Å—Ç—å", "–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è"])
        filtered_df = filtered_df.sort_values(by=sort_by)

        if st.button("üéØ –í—ã–±—Ä–∞—Ç—å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", key=f"btn_{i}"):
            for idx in range(num_items):
                item_seed = seed + idx if seed else None
                selected = weighted_sample(filtered_df, item_seed)

                icon = rarity_icons.get(selected["–†–µ–¥–∫–æ—Å—Ç—å"], "‚ùì")
                with st.expander(f"{icon} {selected['–ù–∞–∑–≤–∞–Ω–∏–µ']} ({selected['–†–µ–¥–∫–æ—Å—Ç—å']})"):
                    st.markdown(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {selected['–û–ø–∏—Å–∞–Ω–∏–µ']}")
                    st.markdown(f"**–û—Å–Ω–æ–≤–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç:** {selected.get('–û—Å–Ω–æ–≤–Ω–æ–π —ç—Ñ—Ñ–µ–∫—Ç', '-')}")
                    st.markdown(f"**–ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã:** {selected.get('–ü–æ–±–æ—á–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã', '-')}")
                    st.markdown(f"**DC —Å–±–æ—Ä–∞:** {selected.get('DC —Å–±–æ—Ä–∞', '-')}")
                    st.markdown(f"**–°—Ç–æ–∏–º–æ—Å—Ç—å:** {selected.get('–°—Ç–æ–∏–º–æ—Å—Ç—å', '-')} –º–∞–ª—ã—Ö –ø–µ—á–∞—Ç–µ–π")
                    st.markdown(f"**–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è:** {selected.get('–°—Ä–µ–¥–∞ –æ–±–∏—Ç–∞–Ω–∏—è', '-')}")
                    st.markdown(f"**–¢–∏–ø:** {selected.get('–¢–∏–ø', '-')}")
                    st.markdown(f"**–§–æ—Ä–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è:** {selected.get('–§–æ—Ä–º–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è', '-')}")
